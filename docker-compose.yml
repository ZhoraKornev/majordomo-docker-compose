version: '3'
services:

  majordomo:
    build: ./app-conf/debian/
    ports:
      - ${DOCKER_BRIDGE}:80:80
      - ${DOCKER_BRIDGE}:8001:8001
    networks:
      majordomo:
    volumes:
      - './app:/var/www/html'
      - './zigbee2mqtt/log:/opt/zigbee2mqtt/data/log'
    links:
      - mysql

  mysql:
    image: linuxserver/mariadb
    container_name: majordomo_${PROJECT_NAME}_mysql
    networks:
      majordomo:
    ports:
      - ${DOCKER_BRIDGE}:3306:3306
    volumes:
      - ./db-data:/var/lib/mysql
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    command:
      mysqld --innodb-flush-method=littlesync --innodb-use-native-aio=OFF
    restart: always

  mosquitto:
    container_name: majordomo_${PROJECT_NAME}_mosquitto
    image: eclipse-mosquitto:latest
    restart: always
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      majordomo:
    ports:
      - ${DOCKER_BRIDGE}:1883:1883
    user: '1000:1000'
    environment:
      - MQTT_BROKER_URL=mqtt://mosquitto


  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt:latest # x86_64/amd64
    restart: always
    volumes:
      - ./zigbee2mqtt:/app/data
    devices:
      - /dev/serial/by-id/usb-Texas_Instruments_TI_CC2531_USB_CDC___0X00124B001938AB48-if00:/dev/ttyACM0
    user: '1000:20'
    networks:
      - majordomo
    depends_on:
      - mosquitto

  blynk-server:
    container_name: blynk-server
    image: mpherg/blynk-server:latest
    networks:
      majordomo:
    ports:
      - '${DOCKER_BRIDGE}:8080:8080'
      - '${DOCKER_BRIDGE}:8440:8440'
      - '${DOCKER_BRIDGE}:9443:9443'
    restart: always
    volumes:
      - ./blynk/data:/config
      - ./blynk/backup:/data/

networks:
  majordomo:
    driver: bridge
    ipam:
      config:
        - subnet: ${DOCKER_NETWORK}
